"use strict";const t=require("./node_modules/.pnpm/decimal.js@10.6.0/node_modules/decimal.js/decimal.js");function i(){Number.prototype.eq=function(e){if(Number.isNaN(this))return!1;const r=typeof e;let n=e;return["number","string"].includes(r)?r==="string"?this.toString()===e:n===this:!1},Number.prototype.isEmpty=function(){return this===0},Number.prototype.isNotEmpty=function(){return!this.isEmpty()},Number.prototype.isZero=function(){return this===0},Number.prototype.isNotZero=function(){return!this.isZero()},Number.prototype.lessThan=function(e){return new t.Decimal(this.valueOf()).lessThan(e)},Number.prototype.lessThanOrEqual=function(e){return new t.Decimal(this.valueOf()).lessThanOrEqualTo(e)},Number.prototype.greaterThan=function(e){return new t.Decimal(this.valueOf()).greaterThan(e)},Number.prototype.greaterThanOrEqual=function(e){return new t.Decimal(this.valueOf()).greaterThanOrEqualTo(e)},Number.prototype.toDecimal=function(){return new t.Decimal(this.valueOf())}}exports.numberExtensions=i;
